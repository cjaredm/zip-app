// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String  @id @default(cuid())
  name     String  @default("")
  email    String  @unique @default("")
  isAdmin  Boolean @default(false)
  password String
}

model Family {
  id              String    @id @default(cuid())
  label           String    @default("")
  lastname        String    @default("")
  status          String?   @default("NEW_LEAD")
  primary_phone   String    @default("")
  secondary_phone String    @default("")
  primary_email   String    @default("")
  secondary_email String    @default("")
  zone            Zone?     @relation("Family_zone", fields: [zoneId], references: [id])
  zoneId          String?   @unique @map("zone")
  address         String    @default("")
  city            String    @default("")
  state           String    @default("")
  zip             String    @default("")
  preference      String?   @default("MALE")
  members         Member[]  @relation("Member_family")
  students        Student[] @relation("Family_students")
  groups          Group[]   @relation("Family_groups")
  smoking         Boolean   @default(false)
  pets            String    @default("")
  referral        String    @default("")
  student_survey  String    @default("")
  notes           String    @default("")
}

model Member {
  id            String  @id @default(cuid())
  label         String  @default("")
  firstname     String  @default("")
  relation      String? @default("CHILD")
  year_of_birth String  @default("")
  interests     String  @default("")
  family        Family? @relation("Member_family", fields: [familyId], references: [id])
  familyId      String? @map("family")

  @@index([familyId])
}

model Group {
  id       String    @id @default(cuid())
  label    String    @default("")
  name     String    @unique @default("")
  status   String?   @default("PENDING")
  families Family[]  @relation("Family_groups")
  students Student[] @relation("Student_group")
}

model Zone {
  id       String  @id @default(cuid())
  name     String  @unique @default("")
  families Family? @relation("Family_zone")
}

model Student {
  id        String   @id @default(cuid())
  label     String   @default("")
  lastname  String   @default("")
  firstname String   @default("")
  gender    String?  @default("MALE")
  families  Family[] @relation("Family_students")
  group     Group?   @relation("Student_group", fields: [groupId], references: [id])
  groupId   String?  @map("group")

  @@index([groupId])
}